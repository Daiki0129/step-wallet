{
  "contractName": "ERC721Receivable",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"},{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Christopher Scott\",\"details\":\"These functions are public, and could be called by anyone, even in the case  where no NFTs have been transferred. Since it's not a reliable source of  truth about ERC721 tokens being transferred, we save the gas and don't  bother emitting a (potentially spurious) event as found in   https://github.com/OpenZeppelin/openzeppelin-solidity/blob/5471fc808a17342d738853d7bf3e9e5ef3108074/contracts/mocks/ERC721ReceiverMock.sol\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"The ERC721 smart contract calls this function on the recipient after a `safetransfer`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Note: the contract address is always the message sender.\",\"params\":{\"_data\":\"Additional data with no specified format\",\"_from\":\"The address which previously owned the token\",\"_operator\":\"The address which called `safeTransferFrom` function\",\"_tokenId\":\"The NFT identifier which is being transferred\"},\"return\":\"`bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`\"},\"onERC721Received(address,uint256,bytes)\":{\"details\":\"The ERC721 smart contract calls this function on the recipient  after a `transfer`. This function MAY throw to revert and reject the  transfer. This function MUST use 50,000 gas or less. Return of other  than the magic value MUST result in the transaction being reverted.  Note: the contract address is always the message sender.\",\"params\":{\"_from\":\"The sending address \",\"_tokenId\":\"The NFT identifier which is being transfered\",\"data\":\"Additional data with no specified format\"},\"return\":\"`bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`  unless throwing\"}},\"title\":\"ERC721Receivable handles the reception of ERC721 tokens  See ERC721 specification\"},\"userdoc\":{\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"Handle the receipt of an NFT\"},\"onERC721Received(address,uint256,bytes)\":{\"notice\":\"Handle the receipt of an NFT\"}}}},\"settings\":{\"compilationTarget\":{\"/usr/src/app/my-react-native-contract-wallet/contract/contracts/ERC721/ERC721Receivable.sol\":\"ERC721Receivable\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/usr/src/app/my-react-native-contract-wallet/contract/contracts/ERC721/ERC721Receivable.sol\":{\"keccak256\":\"0xc8ac819f9594abe2b4884641e2f560ead5db7287624c8b8afd724ee5c2ecde1b\",\"urls\":[\"bzzr://5f4f9c6b827f93c14c4b9a8ed88b96ce688fc1f5a70577ed1b39fe593cfe2244\",\"dweb:/ipfs/QmVTRfUM86Mq94wTbdn2p5Q9PtCgC7ZwFQrZ1tE1Tkh42N\"]},\"/usr/src/app/my-react-native-contract-wallet/contract/contracts/ERC721/ERC721ReceiverDraft.sol\":{\"keccak256\":\"0xed8cf78495f7f08841a1f26eb5c8a4520f972cafde6654c2aad2a5b6b163a55b\",\"urls\":[\"bzzr://7dfeb8a60bc46fa539991ec03ad08e896ad57cdaebbfab2cdebb5c16ff7d83c4\",\"dweb:/ipfs/Qma41UMdNk4UCGw26AvrPzyDdDwAxdHevEmXzJzvGKHjZH\"]},\"/usr/src/app/my-react-native-contract-wallet/contract/contracts/ERC721/ERC721ReceiverFinal.sol\":{\"keccak256\":\"0xd16d89742ab53112aa4249417386e114e6361cc66e762c66aa8a9541efbd9b20\",\"urls\":[\"bzzr://788d262ed1541db89b80f4f309cecaaf496b9dbdc71a85f7e72ca3ca98164738\",\"dweb:/ipfs/QmXG7fcgL9K46DCsAndXYVAqjYgFWzr3fCGy6BR5baBsqK\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506102e4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063150b7a021461003b578063f0b9e5ba14610192575b600080fd5b61013e6004803603608081101561005157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156100b857600080fd5b8201836020820111156100ca57600080fd5b803590602001918460018302840111640100000000831117156100ec57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610287565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b610233600480360360608110156101a857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156101ef57600080fd5b82018360208201111561020157600080fd5b8035906020019184600183028401116401000000008311171561022357600080fd5b909192939192939050505061029b565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b600063150b7a0260e01b9050949350505050565b600063f0b9e5ba60e01b905094935050505056fea265627a7a723058203695ae9eb758911c165403d911987b554dd595111c42d791f9293f8aff03d36764736f6c634300050a0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063150b7a021461003b578063f0b9e5ba14610192575b600080fd5b61013e6004803603608081101561005157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156100b857600080fd5b8201836020820111156100ca57600080fd5b803590602001918460018302840111640100000000831117156100ec57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610287565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b610233600480360360608110156101a857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156101ef57600080fd5b82018360208201111561020157600080fd5b8035906020019184600183028401116401000000008311171561022357600080fd5b909192939192939050505061029b565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b600063150b7a0260e01b9050949350505050565b600063f0b9e5ba60e01b905094935050505056fea265627a7a723058203695ae9eb758911c165403d911987b554dd595111c42d791f9293f8aff03d36764736f6c634300050a0032",
  "sourceMap": "673:1824:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;673:1824:2;;;;;;;",
  "deployedSourceMap": "673:1824:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;673:1824:2;;;;;;;;;;;;;;;;;;;;;;;;2290:205;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2290:205:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2290:205:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2290:205:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2290:205:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2290:205:2;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1410:170;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1410:170:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1410:170:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1410:170:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1410:170:2;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2290:205;2403:6;695:10:4;2470:21:2;;2463:28;;2290:205;;;;;;:::o;1410:170::-;1507:6;1090:10:3;1555:21:2;;1548:28;;1410:170;;;;;;:::o",
  "source": "pragma solidity ^0.5.6;\n\nimport \"./ERC721ReceiverDraft.sol\";\nimport \"./ERC721ReceiverFinal.sol\";\n\n/// @title ERC721Receivable handles the reception of ERC721 tokens\n///  See ERC721 specification\n/// @author Christopher Scott\n/// @dev These functions are public, and could be called by anyone, even in the case\n///  where no NFTs have been transferred. Since it's not a reliable source of\n///  truth about ERC721 tokens being transferred, we save the gas and don't\n///  bother emitting a (potentially spurious) event as found in \n///  https://github.com/OpenZeppelin/openzeppelin-solidity/blob/5471fc808a17342d738853d7bf3e9e5ef3108074/contracts/mocks/ERC721ReceiverMock.sol\ncontract ERC721Receivable is ERC721ReceiverDraft, ERC721ReceiverFinal {\n\n\t/// @notice Handle the receipt of an NFT\n\t/// @dev The ERC721 smart contract calls this function on the recipient\n\t///  after a `transfer`. This function MAY throw to revert and reject the\n\t///  transfer. This function MUST use 50,000 gas or less. Return of other\n\t///  than the magic value MUST result in the transaction being reverted.\n\t///  Note: the contract address is always the message sender.\n\t/// @param _from The sending address \n\t/// @param _tokenId The NFT identifier which is being transfered\n\t/// @param data Additional data with no specified format\n\t/// @return `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`\n\t///  unless throwing\n\tfunction onERC721Received(address _from, uint256 _tokenId, bytes calldata data) external returns(bytes4) {\n\t\t_from;\n\t\t_tokenId;\n\t\tdata;\n\t\treturn ERC721_RECEIVED_DRAFT;\n\t}\n\n\t/// @notice Handle the receipt of an NFT\n\t/// @dev The ERC721 smart contract calls this function on the recipient\n\t/// after a `safetransfer`. This function MAY throw to revert and reject the\n\t/// transfer. Return of other than the magic value MUST result in the\n\t/// transaction being reverted.\n\t/// Note: the contract address is always the message sender.\n\t/// @param _operator The address which called `safeTransferFrom` function\n\t/// @param _from The address which previously owned the token\n\t/// @param _tokenId The NFT identifier which is being transferred\n\t/// @param _data Additional data with no specified format\n\t/// @return `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`\n\tfunction onERC721Received(address _operator, address _from, uint256 _tokenId, bytes memory _data) public returns(bytes4) {\n\t\t\t_operator;\n\t\t\t_from;\n\t\t\t_tokenId;\n\t\t\t_data;\n\t\t\treturn ERC721_RECEIVED_FINAL;\n\t}\n}\n",
  "sourcePath": "/usr/src/app/my-react-native-contract-wallet/contract/contracts/ERC721/ERC721Receivable.sol",
  "ast": {
    "absolutePath": "/usr/src/app/my-react-native-contract-wallet/contract/contracts/ERC721/ERC721Receivable.sol",
    "exportedSymbols": {
      "ERC721Receivable": [
        642
      ]
    },
    "id": 643,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 591,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/usr/src/app/my-react-native-contract-wallet/contract/contracts/ERC721/ERC721ReceiverDraft.sol",
        "file": "./ERC721ReceiverDraft.sol",
        "id": 592,
        "nodeType": "ImportDirective",
        "scope": 643,
        "sourceUnit": 660,
        "src": "25:35:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/usr/src/app/my-react-native-contract-wallet/contract/contracts/ERC721/ERC721ReceiverFinal.sol",
        "file": "./ERC721ReceiverFinal.sol",
        "id": 593,
        "nodeType": "ImportDirective",
        "scope": 643,
        "sourceUnit": 679,
        "src": "61:35:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 594,
              "name": "ERC721ReceiverDraft",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 659,
              "src": "702:19:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721ReceiverDraft_$659",
                "typeString": "contract ERC721ReceiverDraft"
              }
            },
            "id": 595,
            "nodeType": "InheritanceSpecifier",
            "src": "702:19:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 596,
              "name": "ERC721ReceiverFinal",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 678,
              "src": "723:19:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721ReceiverFinal_$678",
                "typeString": "contract ERC721ReceiverFinal"
              }
            },
            "id": 597,
            "nodeType": "InheritanceSpecifier",
            "src": "723:19:2"
          }
        ],
        "contractDependencies": [
          659,
          678
        ],
        "contractKind": "contract",
        "documentation": "@title ERC721Receivable handles the reception of ERC721 tokens\n  See ERC721 specification\n @author Christopher Scott\n @dev These functions are public, and could be called by anyone, even in the case\n  where no NFTs have been transferred. Since it's not a reliable source of\n  truth about ERC721 tokens being transferred, we save the gas and don't\n  bother emitting a (potentially spurious) event as found in \n  https://github.com/OpenZeppelin/openzeppelin-solidity/blob/5471fc808a17342d738853d7bf3e9e5ef3108074/contracts/mocks/ERC721ReceiverMock.sol",
        "fullyImplemented": true,
        "id": 642,
        "linearizedBaseContracts": [
          642,
          678,
          659
        ],
        "name": "ERC721Receivable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 616,
              "nodeType": "Block",
              "src": "1515:65:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 608,
                    "name": "_from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 599,
                    "src": "1519:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 609,
                  "nodeType": "ExpressionStatement",
                  "src": "1519:5:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 610,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 601,
                    "src": "1528:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "1528:8:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 612,
                    "name": "data",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 603,
                    "src": "1540:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "id": 613,
                  "nodeType": "ExpressionStatement",
                  "src": "1540:4:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 614,
                    "name": "ERC721_RECEIVED_DRAFT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 647,
                    "src": "1555:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 607,
                  "id": 615,
                  "nodeType": "Return",
                  "src": "1548:28:2"
                }
              ]
            },
            "documentation": "@notice Handle the receipt of an NFT\n @dev The ERC721 smart contract calls this function on the recipient\n  after a `transfer`. This function MAY throw to revert and reject the\n  transfer. This function MUST use 50,000 gas or less. Return of other\n  than the magic value MUST result in the transaction being reverted.\n  Note: the contract address is always the message sender.\n @param _from The sending address \n @param _tokenId The NFT identifier which is being transfered\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`\n  unless throwing",
            "id": 617,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 599,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "1436:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1436:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 601,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "1451:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1451:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 603,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "1469:19:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1469:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1435:54:2"
            },
            "returnParameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 606,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "1507:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 605,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1507:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1506:8:2"
            },
            "scope": 642,
            "src": "1410:170:2",
            "stateMutability": "nonpayable",
            "superFunction": 658,
            "visibility": "external"
          },
          {
            "body": {
              "id": 640,
              "nodeType": "Block",
              "src": "2411:84:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 630,
                    "name": "_operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 619,
                    "src": "2416:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 631,
                  "nodeType": "ExpressionStatement",
                  "src": "2416:9:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 632,
                    "name": "_from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 621,
                    "src": "2430:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 633,
                  "nodeType": "ExpressionStatement",
                  "src": "2430:5:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 634,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 623,
                    "src": "2440:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 635,
                  "nodeType": "ExpressionStatement",
                  "src": "2440:8:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 636,
                    "name": "_data",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 625,
                    "src": "2453:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 637,
                  "nodeType": "ExpressionStatement",
                  "src": "2453:5:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 638,
                    "name": "ERC721_RECEIVED_FINAL",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 664,
                    "src": "2470:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 629,
                  "id": 639,
                  "nodeType": "Return",
                  "src": "2463:28:2"
                }
              ]
            },
            "documentation": "@notice Handle the receipt of an NFT\n @dev The ERC721 smart contract calls this function on the recipient\n after a `safetransfer`. This function MAY throw to revert and reject the\n transfer. Return of other than the magic value MUST result in the\n transaction being reverted.\n Note: the contract address is always the message sender.\n @param _operator The address which called `safeTransferFrom` function\n @param _from The address which previously owned the token\n @param _tokenId The NFT identifier which is being transferred\n @param _data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`",
            "id": 641,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 619,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 641,
                  "src": "2316:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 618,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2316:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 621,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 641,
                  "src": "2335:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2335:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 623,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 641,
                  "src": "2350:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 622,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2350:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 625,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 641,
                  "src": "2368:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 624,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2368:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2315:72:2"
            },
            "returnParameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 628,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 641,
                  "src": "2403:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2403:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2402:8:2"
            },
            "scope": 642,
            "src": "2290:205:2",
            "stateMutability": "nonpayable",
            "superFunction": 677,
            "visibility": "public"
          }
        ],
        "scope": 643,
        "src": "673:1824:2"
      }
    ],
    "src": "0:2498:2"
  },
  "legacyAST": {
    "absolutePath": "/usr/src/app/my-react-native-contract-wallet/contract/contracts/ERC721/ERC721Receivable.sol",
    "exportedSymbols": {
      "ERC721Receivable": [
        642
      ]
    },
    "id": 643,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 591,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/usr/src/app/my-react-native-contract-wallet/contract/contracts/ERC721/ERC721ReceiverDraft.sol",
        "file": "./ERC721ReceiverDraft.sol",
        "id": 592,
        "nodeType": "ImportDirective",
        "scope": 643,
        "sourceUnit": 660,
        "src": "25:35:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/usr/src/app/my-react-native-contract-wallet/contract/contracts/ERC721/ERC721ReceiverFinal.sol",
        "file": "./ERC721ReceiverFinal.sol",
        "id": 593,
        "nodeType": "ImportDirective",
        "scope": 643,
        "sourceUnit": 679,
        "src": "61:35:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 594,
              "name": "ERC721ReceiverDraft",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 659,
              "src": "702:19:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721ReceiverDraft_$659",
                "typeString": "contract ERC721ReceiverDraft"
              }
            },
            "id": 595,
            "nodeType": "InheritanceSpecifier",
            "src": "702:19:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 596,
              "name": "ERC721ReceiverFinal",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 678,
              "src": "723:19:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721ReceiverFinal_$678",
                "typeString": "contract ERC721ReceiverFinal"
              }
            },
            "id": 597,
            "nodeType": "InheritanceSpecifier",
            "src": "723:19:2"
          }
        ],
        "contractDependencies": [
          659,
          678
        ],
        "contractKind": "contract",
        "documentation": "@title ERC721Receivable handles the reception of ERC721 tokens\n  See ERC721 specification\n @author Christopher Scott\n @dev These functions are public, and could be called by anyone, even in the case\n  where no NFTs have been transferred. Since it's not a reliable source of\n  truth about ERC721 tokens being transferred, we save the gas and don't\n  bother emitting a (potentially spurious) event as found in \n  https://github.com/OpenZeppelin/openzeppelin-solidity/blob/5471fc808a17342d738853d7bf3e9e5ef3108074/contracts/mocks/ERC721ReceiverMock.sol",
        "fullyImplemented": true,
        "id": 642,
        "linearizedBaseContracts": [
          642,
          678,
          659
        ],
        "name": "ERC721Receivable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 616,
              "nodeType": "Block",
              "src": "1515:65:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 608,
                    "name": "_from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 599,
                    "src": "1519:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 609,
                  "nodeType": "ExpressionStatement",
                  "src": "1519:5:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 610,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 601,
                    "src": "1528:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "1528:8:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 612,
                    "name": "data",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 603,
                    "src": "1540:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "id": 613,
                  "nodeType": "ExpressionStatement",
                  "src": "1540:4:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 614,
                    "name": "ERC721_RECEIVED_DRAFT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 647,
                    "src": "1555:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 607,
                  "id": 615,
                  "nodeType": "Return",
                  "src": "1548:28:2"
                }
              ]
            },
            "documentation": "@notice Handle the receipt of an NFT\n @dev The ERC721 smart contract calls this function on the recipient\n  after a `transfer`. This function MAY throw to revert and reject the\n  transfer. This function MUST use 50,000 gas or less. Return of other\n  than the magic value MUST result in the transaction being reverted.\n  Note: the contract address is always the message sender.\n @param _from The sending address \n @param _tokenId The NFT identifier which is being transfered\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`\n  unless throwing",
            "id": 617,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 599,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "1436:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1436:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 601,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "1451:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1451:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 603,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "1469:19:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1469:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1435:54:2"
            },
            "returnParameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 606,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "1507:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 605,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1507:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1506:8:2"
            },
            "scope": 642,
            "src": "1410:170:2",
            "stateMutability": "nonpayable",
            "superFunction": 658,
            "visibility": "external"
          },
          {
            "body": {
              "id": 640,
              "nodeType": "Block",
              "src": "2411:84:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 630,
                    "name": "_operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 619,
                    "src": "2416:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 631,
                  "nodeType": "ExpressionStatement",
                  "src": "2416:9:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 632,
                    "name": "_from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 621,
                    "src": "2430:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 633,
                  "nodeType": "ExpressionStatement",
                  "src": "2430:5:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 634,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 623,
                    "src": "2440:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 635,
                  "nodeType": "ExpressionStatement",
                  "src": "2440:8:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 636,
                    "name": "_data",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 625,
                    "src": "2453:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 637,
                  "nodeType": "ExpressionStatement",
                  "src": "2453:5:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 638,
                    "name": "ERC721_RECEIVED_FINAL",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 664,
                    "src": "2470:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 629,
                  "id": 639,
                  "nodeType": "Return",
                  "src": "2463:28:2"
                }
              ]
            },
            "documentation": "@notice Handle the receipt of an NFT\n @dev The ERC721 smart contract calls this function on the recipient\n after a `safetransfer`. This function MAY throw to revert and reject the\n transfer. Return of other than the magic value MUST result in the\n transaction being reverted.\n Note: the contract address is always the message sender.\n @param _operator The address which called `safeTransferFrom` function\n @param _from The address which previously owned the token\n @param _tokenId The NFT identifier which is being transferred\n @param _data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`",
            "id": 641,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 619,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 641,
                  "src": "2316:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 618,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2316:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 621,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 641,
                  "src": "2335:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2335:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 623,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 641,
                  "src": "2350:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 622,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2350:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 625,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 641,
                  "src": "2368:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 624,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2368:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2315:72:2"
            },
            "returnParameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 628,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 641,
                  "src": "2403:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2403:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2402:8:2"
            },
            "scope": 642,
            "src": "2290:205:2",
            "stateMutability": "nonpayable",
            "superFunction": 677,
            "visibility": "public"
          }
        ],
        "scope": 643,
        "src": "673:1824:2"
      }
    ],
    "src": "0:2498:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.10+commit.5a6ea5b1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-11-16T09:04:16.548Z",
  "devdoc": {
    "author": "Christopher Scott",
    "details": "These functions are public, and could be called by anyone, even in the case  where no NFTs have been transferred. Since it's not a reliable source of  truth about ERC721 tokens being transferred, we save the gas and don't  bother emitting a (potentially spurious) event as found in   https://github.com/OpenZeppelin/openzeppelin-solidity/blob/5471fc808a17342d738853d7bf3e9e5ef3108074/contracts/mocks/ERC721ReceiverMock.sol",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "The ERC721 smart contract calls this function on the recipient after a `safetransfer`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Note: the contract address is always the message sender.",
        "params": {
          "_data": "Additional data with no specified format",
          "_from": "The address which previously owned the token",
          "_operator": "The address which called `safeTransferFrom` function",
          "_tokenId": "The NFT identifier which is being transferred"
        },
        "return": "`bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`"
      },
      "onERC721Received(address,uint256,bytes)": {
        "details": "The ERC721 smart contract calls this function on the recipient  after a `transfer`. This function MAY throw to revert and reject the  transfer. This function MUST use 50,000 gas or less. Return of other  than the magic value MUST result in the transaction being reverted.  Note: the contract address is always the message sender.",
        "params": {
          "_from": "The sending address ",
          "_tokenId": "The NFT identifier which is being transfered",
          "data": "Additional data with no specified format"
        },
        "return": "`bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`  unless throwing"
      }
    },
    "title": "ERC721Receivable handles the reception of ERC721 tokens  See ERC721 specification"
  },
  "userdoc": {
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "notice": "Handle the receipt of an NFT"
      },
      "onERC721Received(address,uint256,bytes)": {
        "notice": "Handle the receipt of an NFT"
      }
    }
  }
}
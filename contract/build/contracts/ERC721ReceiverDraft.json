{
  "contractName": "ERC721ReceiverDraft",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from  ERC721 asset contracts.Note: this is the interface defined from   https://github.com/ethereum/EIPs/commit/2bddd126def7c046e1e62408dc2b51bdd9e57f0f  to https://github.com/ethereum/EIPs/commit/27788131d5975daacbab607076f2ee04624f9dbb   and is not the final interface.  Due to the extended period of time this revision was specified in the draft,  we are supporting both this and the newer (final) interface in order to be   compatible with any ERC721 implementations that may have used this interface.\",\"methods\":{\"onERC721Received(address,uint256,bytes)\":{\"details\":\"The ERC721 smart contract calls this function on the recipient  after a `transfer`. This function MAY throw to revert and reject the  transfer. This function MUST use 50,000 gas or less. Return of other  than the magic value MUST result in the transaction being reverted.  Note: the contract address is always the message sender.\",\"params\":{\"_from\":\"The sending address \",\"_tokenId\":\"The NFT identifier which is being transfered\",\"data\":\"Additional data with no specified format\"},\"return\":\"`bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`  unless throwing\"}},\"title\":\"ERC721ReceiverDraft\"},\"userdoc\":{\"methods\":{\"onERC721Received(address,uint256,bytes)\":{\"notice\":\"Handle the receipt of an NFT\"}}}},\"settings\":{\"compilationTarget\":{\"/usr/src/app/react-native-contract-wallet/native-app/contract/contracts/ERC721/ERC721ReceiverDraft.sol\":\"ERC721ReceiverDraft\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/usr/src/app/react-native-contract-wallet/native-app/contract/contracts/ERC721/ERC721ReceiverDraft.sol\":{\"keccak256\":\"0xed8cf78495f7f08841a1f26eb5c8a4520f972cafde6654c2aad2a5b6b163a55b\",\"urls\":[\"bzzr://7dfeb8a60bc46fa539991ec03ad08e896ad57cdaebbfab2cdebb5c16ff7d83c4\",\"dweb:/ipfs/Qma41UMdNk4UCGw26AvrPzyDdDwAxdHevEmXzJzvGKHjZH\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.6;\n\n\n/// @title ERC721ReceiverDraft\n/// @dev Interface for any contract that wants to support safeTransfers from\n///  ERC721 asset contracts.\n/// @dev Note: this is the interface defined from \n///  https://github.com/ethereum/EIPs/commit/2bddd126def7c046e1e62408dc2b51bdd9e57f0f\n///  to https://github.com/ethereum/EIPs/commit/27788131d5975daacbab607076f2ee04624f9dbb \n///  and is not the final interface.\n///  Due to the extended period of time this revision was specified in the draft,\n///  we are supporting both this and the newer (final) interface in order to be \n///  compatible with any ERC721 implementations that may have used this interface.\ncontract ERC721ReceiverDraft {\n\n\t/// @dev Magic value to be returned upon successful reception of an NFT\n\t///  Equals to `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`,\n\t///  which can be also obtained as `ERC721ReceiverDraft(0).onERC721Received.selector`\n\t/// @dev see https://github.com/ethereum/EIPs/commit/2bddd126def7c046e1e62408dc2b51bdd9e57f0f\n\tbytes4 internal constant ERC721_RECEIVED_DRAFT = 0xf0b9e5ba;\n\n\t/// @notice Handle the receipt of an NFT\n\t/// @dev The ERC721 smart contract calls this function on the recipient\n\t///  after a `transfer`. This function MAY throw to revert and reject the\n\t///  transfer. This function MUST use 50,000 gas or less. Return of other\n\t///  than the magic value MUST result in the transaction being reverted.\n\t///  Note: the contract address is always the message sender.\n\t/// @param _from The sending address \n\t/// @param _tokenId The NFT identifier which is being transfered\n\t/// @param data Additional data with no specified format\n\t/// @return `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`\n\t///  unless throwing\n\tfunction onERC721Received(address _from, uint256 _tokenId, bytes calldata data) external returns(bytes4);\n}",
  "sourcePath": "/usr/src/app/react-native-contract-wallet/native-app/contract/contracts/ERC721/ERC721ReceiverDraft.sol",
  "ast": {
    "absolutePath": "/usr/src/app/react-native-contract-wallet/native-app/contract/contracts/ERC721/ERC721ReceiverDraft.sol",
    "exportedSymbols": {
      "ERC721ReceiverDraft": [
        2130
      ]
    },
    "id": 2131,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2115,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title ERC721ReceiverDraft\n @dev Interface for any contract that wants to support safeTransfers from\n  ERC721 asset contracts.\n @dev Note: this is the interface defined from \n  https://github.com/ethereum/EIPs/commit/2bddd126def7c046e1e62408dc2b51bdd9e57f0f\n  to https://github.com/ethereum/EIPs/commit/27788131d5975daacbab607076f2ee04624f9dbb \n  and is not the final interface.\n  Due to the extended period of time this revision was specified in the draft,\n  we are supporting both this and the newer (final) interface in order to be \n  compatible with any ERC721 implementations that may have used this interface.",
        "fullyImplemented": false,
        "id": 2130,
        "linearizedBaseContracts": [
          2130
        ],
        "name": "ERC721ReceiverDraft",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 2118,
            "name": "ERC721_RECEIVED_DRAFT",
            "nodeType": "VariableDeclaration",
            "scope": 2130,
            "src": "1041:59:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2116,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1041:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30786630623965356261",
              "id": 2117,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1090:10:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_4038714810_by_1",
                "typeString": "int_const 4038714810"
              },
              "value": "0xf0b9e5ba"
            },
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@notice Handle the receipt of an NFT\n @dev The ERC721 smart contract calls this function on the recipient\n  after a `transfer`. This function MAY throw to revert and reject the\n  transfer. This function MUST use 50,000 gas or less. Return of other\n  than the magic value MUST result in the transaction being reverted.\n  Note: the contract address is always the message sender.\n @param _from The sending address \n @param _tokenId The NFT identifier which is being transfered\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`\n  unless throwing",
            "id": 2129,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2120,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "1793:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1793:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2122,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "1808:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1808:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2124,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "1826:19:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2123,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1826:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1792:54:12"
            },
            "returnParameters": {
              "id": 2128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2127,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "1864:6:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2126,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1864:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1863:8:12"
            },
            "scope": 2130,
            "src": "1767:105:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2131,
        "src": "673:1201:12"
      }
    ],
    "src": "0:1874:12"
  },
  "legacyAST": {
    "absolutePath": "/usr/src/app/react-native-contract-wallet/native-app/contract/contracts/ERC721/ERC721ReceiverDraft.sol",
    "exportedSymbols": {
      "ERC721ReceiverDraft": [
        2130
      ]
    },
    "id": 2131,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2115,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title ERC721ReceiverDraft\n @dev Interface for any contract that wants to support safeTransfers from\n  ERC721 asset contracts.\n @dev Note: this is the interface defined from \n  https://github.com/ethereum/EIPs/commit/2bddd126def7c046e1e62408dc2b51bdd9e57f0f\n  to https://github.com/ethereum/EIPs/commit/27788131d5975daacbab607076f2ee04624f9dbb \n  and is not the final interface.\n  Due to the extended period of time this revision was specified in the draft,\n  we are supporting both this and the newer (final) interface in order to be \n  compatible with any ERC721 implementations that may have used this interface.",
        "fullyImplemented": false,
        "id": 2130,
        "linearizedBaseContracts": [
          2130
        ],
        "name": "ERC721ReceiverDraft",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 2118,
            "name": "ERC721_RECEIVED_DRAFT",
            "nodeType": "VariableDeclaration",
            "scope": 2130,
            "src": "1041:59:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 2116,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1041:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30786630623965356261",
              "id": 2117,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1090:10:12",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_4038714810_by_1",
                "typeString": "int_const 4038714810"
              },
              "value": "0xf0b9e5ba"
            },
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@notice Handle the receipt of an NFT\n @dev The ERC721 smart contract calls this function on the recipient\n  after a `transfer`. This function MAY throw to revert and reject the\n  transfer. This function MUST use 50,000 gas or less. Return of other\n  than the magic value MUST result in the transaction being reverted.\n  Note: the contract address is always the message sender.\n @param _from The sending address \n @param _tokenId The NFT identifier which is being transfered\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`\n  unless throwing",
            "id": 2129,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2120,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "1793:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1793:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2122,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "1808:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1808:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2124,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "1826:19:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2123,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1826:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1792:54:12"
            },
            "returnParameters": {
              "id": 2128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2127,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "1864:6:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2126,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1864:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1863:8:12"
            },
            "scope": 2130,
            "src": "1767:105:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2131,
        "src": "673:1201:12"
      }
    ],
    "src": "0:1874:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.10+commit.5a6ea5b1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-10-19T07:49:48.196Z",
  "devdoc": {
    "details": "Interface for any contract that wants to support safeTransfers from  ERC721 asset contracts.Note: this is the interface defined from   https://github.com/ethereum/EIPs/commit/2bddd126def7c046e1e62408dc2b51bdd9e57f0f  to https://github.com/ethereum/EIPs/commit/27788131d5975daacbab607076f2ee04624f9dbb   and is not the final interface.  Due to the extended period of time this revision was specified in the draft,  we are supporting both this and the newer (final) interface in order to be   compatible with any ERC721 implementations that may have used this interface.",
    "methods": {
      "onERC721Received(address,uint256,bytes)": {
        "details": "The ERC721 smart contract calls this function on the recipient  after a `transfer`. This function MAY throw to revert and reject the  transfer. This function MUST use 50,000 gas or less. Return of other  than the magic value MUST result in the transaction being reverted.  Note: the contract address is always the message sender.",
        "params": {
          "_from": "The sending address ",
          "_tokenId": "The NFT identifier which is being transfered",
          "data": "Additional data with no specified format"
        },
        "return": "`bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`  unless throwing"
      }
    },
    "title": "ERC721ReceiverDraft"
  },
  "userdoc": {
    "methods": {
      "onERC721Received(address,uint256,bytes)": {
        "notice": "Handle the receipt of an NFT"
      }
    }
  }
}